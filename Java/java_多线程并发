主线程等待线程池执行完才执行
  shutdown方法
    平滑的关闭ExecutorService，调用后ExecutorService停止接收新的任务并且等待已经提交的任务（包含提交正在执行和提交未执行）执行完成。当所有提交任务执行完毕，线程池即被关闭。
  awaitTermination方法
    接收timeout和TimeUnit两个参数，用于设定超时时间及单位
    当等待超过设定时间时，会监测ExecutorService是否已经关闭，若关闭则返回true，否则返回false。一般情况下会和shutdown方法组合使用。
  demo
    long start = System.currentTimeMillis();
    // 创建一个同时允许两个线程并发执行的线程池
    ExecutorService executor = Executors.newFixedThreadPool(20);
    for(int i = 0; i < 5; i++)
    {
      Thread thread = new TestThread();
      executor.execute(thread);
    }
    executor.shutdown();

    try
    {
      // awaitTermination返回false即超时会继续循环，返回true即线程池中的线程执行完成主线程跳出循环往下执行，每隔10秒循环一次
      while (!executor.awaitTermination(10, TimeUnit.SECONDS));
    }
    catch (InterruptedException e)
    {
      e.printStackTrace();
    }

    long end = System.currentTimeMillis();
    System.out.println("子线程执行时长：" + (end - start));
