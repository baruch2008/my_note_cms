SimpleDateFormat format =  new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"); 
时间字符串转化为 long字符串
    Date date = format.parse("2016-09-08 09:15:12");
    System.out.println(date.getTime());  //将时间转化为毫秒数例如: 1473297300000
将long字符串转化为时间格式化
    Date date=new Date(Long.parseLong("1473297360000"));  
    time=format.format(date);  
    System.out.println(time);  

动态拼接String
    String chargeFlowUrl = _AGENT_URL+"?agentAccount="+_AGENT_ACCOUNT+"&sequence=%s &phone=%s &iceUrl=%s &range=%d &size=%d &_timestamp=%s";
    String url = String.format(chargeFlowUrl, sequence, phone , noticeUrl , range, size,URLEncoder.encode(timestamp, "utf-8"));

字符串中提取数字

字符串中截取两个子字符串之前的内容（使用场景：截取html与）
    String soap = "abc3443abcfgjhgabcgfjabc";
    String rgex = "abc(.*?)abc";
    Pattern pattern = Pattern.compile(rgex);
    Matcher m = pattern.matcher(soap);
    while (m.find()) {
        String result = m.group(i); // 获取结果
    }

判断字符串是否为数字
    public static boolean isInteger(String str) {  
        // 方法1
        Pattern pattern = Pattern.compile("[0-9]*");
        // 方法2
        Pattern pattern = Pattern.compile("^[-\\+]?[\\d]*$");    
        return pattern.matcher(str).matches();    
      } 
      
拼接字符串（StringBuffer类似）
    StringBuilder sb = new StringBuilder();
    long ts = System.currentTimeMillis();
    for (int i = 0; i < 100000; i++) {
        sb.append(String.valueOf(i));
    }
    sb.toString();
