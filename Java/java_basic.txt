关键字
	访问控制方式
		private	私用模式
		protected	保护模式
		public	共用模式
	基本数据类型
		int	整数类型
		boolean	布尔类型
		float	单精度浮点数类型
		byte	字节类型
		double	双精度浮点数类型
		short	基本数据类型之一,短整数类型
		char	字符类型
		long	长整数类型
	控制流
		switch	分支语句结构的引导词
		case	用在switch语句之中，表示其中的一个分支
		default	默认，例如，用在switch语句中，表明一个默认的分支
		do	用在do-while循环结构中
		while	用在循环结构中
		for	一种循环结构的引导词
		break	提前跳出一个块
		continue	回到一个块的开始处
		if	条件语句的引导词
		else	用在条件语句中，表明当条件不成立时的分支
	异常
		throw	抛出一个异常
		throws	声明在当前定义的成员方法中所有需要抛出的异常
		try	尝试一个可能抛出异常的程序块
		catch	用在异常处理中，用来捕捉异常
		finally	用于处理异常情况，用来声明一个基本肯定会被执行到的语句块
	类或字段属性
		class	类
		abstract	表明类或者成员方法具有抽象属性
		static	表明具有静态属性
		final	用来说明最终属性，表明一个类不能派生出子类，或者成员方法不能被覆盖，或者成员域的值不能被改变，用来定义常量
		enum	枚举
	引入
		package	包
		import	表明要访问指定的类或包
		
		assert	用来进行程序调试
		const	保留关键字，没有具体含义
		goto	保留关键字，没有具体含义
		implements	表明一个类实现了给定的接口
		extends	表明一个类型是另一个类型的子类型，这里常见的类型有类和接口
		instanceof	用来测试一个对象是否是指定类型的实例对象
		interface	接口
		native	用来声明一个方法是由与计算机相关的语言（如C/C++/FORTRAN语言）实现的
		new	用来创建新实例对象
		return	从成员方法中返回数据
		strictfp	用来声明FP_strict（单精度或双精度浮点数）表达式遵循IEEE 754算术规范[1]  

		super	表明当前对象的父类型的引用或者父类型的构造方法
		this	指向当前实例对象的引用
		synchronized	表明一段代码需要同步执行
		transient	声明不用序列化的成员域

		void	声明当前成员方法没有返回值
		volatile	表明两个或者多个变量必须同步地发生变化



跳出多层循环（循环标签名的命名方法是：java命名规则 和 半角冒号   比如： lableA: ）
	lableB:  
	for(int i=0;i<3;i++){  
		lableA:  
		for(int j=0;j<3;j++){  
			System.out.println(j);  
			if(j==1){  
				break lableB;  
			}  
		}  
	} 
	
jar包出现了冲突
	java.lang.reflect.InvocationTargetException

