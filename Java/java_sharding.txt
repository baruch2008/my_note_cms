pom.xml
    <dependency>
        <groupId>io.shardingsphere</groupId>
        <artifactId>sharding-jdbc</artifactId>
        <version>3.0.0.M1</version>
    </dependency>
    <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-dbcp2</artifactId>
        <version>2.2.0</version>
    </dependency>
    <dependency>
        <groupId>commons-dbcp</groupId>
        <artifactId>commons-dbcp</artifactId>
    </dependency>

dbconfig.yml
    spring:
      datasource:
        type: org.apache.commons.dbcp2.BasicDataSource
    sharding:
      jdbc:
        datasource:
          names: db_test // 可以添加多个数据源
          code_center:
            type: org.apache.commons.dbcp.BasicDataSource
            driver: com.mysql.jdbc.Driver
            url: jdbc:mysql://ip:3306/db_test?useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true
            username: root
            password: 123456
        config:
          sharding:
            tables:
              table_test: // 需要分部署读取的表名，去除分片数字标识
                actual-data-nodes: db_test.table_test_$->{0..9} // 设置实际数字节点名称
                table-strategy: // 分片策略
                  inline:
                    sharding-column: sharding_id // 分片来源行
                    algorithm-expression: table_test_$->{sharding_id % 10} // 分片算法设置，以sharding_id除以10的余数为片标识
注意事项
    1.不支持分片的表与不分片的表JOIN
    2.不支持分片表的DISTINCAT
    3.通过sharding-jdbc操作的表都要在dbconfig.yml-sharding.config.sharding.tables
    
DATAROUTER
├─multidatabase 数据库路由
│  │  DataSourceAspect.java
│  │  DataSourceConfigItem.java
│  │  DynamicDataSource.java
│  │  MultiDataBaseFactory.java
│  │  
│  └─config
│          MultiDataBaseConfig.java
│          ShardingTableInfo.java
│          
└─sharding sharding三方包使用
    │  DatabaseShardingAlgorithm.java
    │  TableShardingAlgorithm.java
    │  
    └─config
            ShardDataSourceFactory.java
