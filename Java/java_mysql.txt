# 导出mysql表为html（语句有问题）
	mysql -uroot -p -e"select * from cxyp_student_score_third"-D cxyp -html > D:\1.html;
### 排查数据库执行慢
  show processlist
### 查询速度优化
  对常用条件创建索引
  减少执行sql语句的次数
  将关联查询操作移动到java代码中执行，当数据量大的时候减少在sql中执行IN 或 JOIN的操作

### 两表之间求差集（not in效率低，但绝对有效）
SELECT t1.* FROM t1 
WHERE name NOT IN
(SELECT name FROM t2)

SELECT t1.id, t1.name, t1.age
FROM t1 LEFT JOIN t2 ON t1.id = t2.id
WHERE t1.name != t2.name

### 优化left join代替not in
select uid from signshould where mid=897 
and uid not in(select uid from sign where mid=897 and thetype=0) 
and uid not in(select uid from leaves where mid=897)
                    ↓
select a.* from signshould as a 
LEFT JOIN (select * from sign where mid=897 and thetype=0) as b ON a.uid=b.uid 
LEFT JOIN (select * from leaves where mid=897) as c ON a.uid=c.uid  
where a.mid=897 and b.uid is null and c.uid is null
注：where后的条件容易错写成 a.uid != b.uid

判断是不是数字
	SELECT '1.1' REGEXP '[0-9.]'
		结果为1表示true 当然也可以使用SELECT '1.1' REGEXP '[^0-9.]'，结果为0表示false。 
判断是不是包含字母
	SELECT '1AA' REGEXP '[a-z]'
		结果为1表示true，此情况不区分英文大小写，若区分大小写可使用SELECT '1AA' REGEXP BINARY '[a-z]'，结果为0表示false。

同一个表的一列复制到另一列
	update table1  set field1 = field2;
不同表一列复制到另一个列
	update table1,table2 set table1.field1=table2.field2 where table1.id=table2.id

error 
	联合查询表之间排序规则不同 Illegal mix of collations for operation 'UNION'
		原因
			varchar等文本类型的字段使用了不同的排序规则，比如utf8_general_ci 与 utf8_unicode_ci 混用
	java保存到mysql的中文数据变成问号
		解决方案
			数据库连接配置加上字符编码
			String url="jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8"; 
			String user="root"; 
			String password="123456";
			
未解之谜
2018-08-10 14:15:31,447 ERROR [com.huawei.allinone.web.controller.ExceptionHandlerAdvice] - ---DefaultException Handler---Host 172.17.75.1 invokes url http://100.99.64.130:9000/v1/requirement/projectTotalWork ERROR: {}
org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.
        
Caused by: javax.persistence.PersistenceException: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.
        
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.
        
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: The last packet successfully received from the server was 41,467,736 milliseconds ago.  The last packet sent successfully to the server was 41,467,736 milliseconds ago. is longer than the server configured value of 'wait_timeout'. You should consider either expiring and/or testing connection validity before use in your application, increasing the server configured values for client timeouts, or using the Connector/J connection property 'autoReconnect=true' to avoid this problem.
        
Caused by: java.net.SocketException: Broken pipe

